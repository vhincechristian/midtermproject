import {
  VBtn
} from "./chunk-BVOSVQRX.js";
import "./chunk-4NFRTTR7.js";
import "./chunk-VGW476CH.js";
import "./chunk-2NJXQRJW.js";
import {
  VToolbar,
  VToolbarTitle,
  filterToolbarProps,
  makeVToolbarProps
} from "./chunk-L7RQNKOV.js";
import "./chunk-CEMARSK6.js";
import "./chunk-LBOXRKQR.js";
import "./chunk-2ZEWZD3T.js";
import "./chunk-JQMBNIIT.js";
import "./chunk-4W6GCFZ6.js";
import "./chunk-MJL2LTRD.js";
import "./chunk-I5BHNCAP.js";
import {
  useProxiedModel
} from "./chunk-QUMHVG4T.js";
import "./chunk-OJ3HOVVT.js";
import "./chunk-ZDJIGZR4.js";
import "./chunk-LTCDXG3Q.js";
import "./chunk-WX3ZRR6Q.js";
import "./chunk-O7WGMDKS.js";
import {
  IconValue
} from "./chunk-J46A6Z2H.js";
import "./chunk-C5JIBSGY.js";
import "./chunk-5DAAGTR4.js";
import "./chunk-CPOK2ZFN.js";
import {
  makeLayoutItemProps,
  useLayoutItem
} from "./chunk-D5UXV7ZP.js";
import "./chunk-NNQJV63T.js";
import {
  defineComponent,
  useRender
} from "./chunk-I6Y5M4A3.js";
import {
  computed,
  createVNode,
  mergeProps,
  ref,
  toRef
} from "./chunk-V4LB3WK7.js";
import "./chunk-RSJERJUL.js";

// node_modules/vuetify/lib/components/VAppBar/VAppBar.mjs
import "C:/Users/vhinc/Desktop/midtermproject/node_modules/vuetify/lib/components/VAppBar/VAppBar.css";
var VAppBar = defineComponent({
  name: "VAppBar",
  props: {
    modelValue: {
      type: Boolean,
      default: true
    },
    location: {
      type: String,
      default: "top",
      validator: (value) => ["top", "bottom"].includes(value)
    },
    ...makeVToolbarProps(),
    ...makeLayoutItemProps(),
    height: {
      type: [Number, String],
      default: 64
    }
  },
  emits: {
    "update:modelValue": (value) => true
  },
  setup(props, _ref) {
    let {
      slots
    } = _ref;
    const vToolbarRef = ref();
    const isActive = useProxiedModel(props, "modelValue");
    const height = computed(() => {
      var _vToolbarRef$value$co, _vToolbarRef$value, _vToolbarRef$value$ex, _vToolbarRef$value2;
      const height2 = (_vToolbarRef$value$co = (_vToolbarRef$value = vToolbarRef.value) == null ? void 0 : _vToolbarRef$value.contentHeight) != null ? _vToolbarRef$value$co : 0;
      const extensionHeight = (_vToolbarRef$value$ex = (_vToolbarRef$value2 = vToolbarRef.value) == null ? void 0 : _vToolbarRef$value2.extensionHeight) != null ? _vToolbarRef$value$ex : 0;
      return height2 + extensionHeight;
    });
    const {
      layoutItemStyles
    } = useLayoutItem({
      id: props.name,
      order: computed(() => parseInt(props.order, 10)),
      position: toRef(props, "location"),
      layoutSize: height,
      elementSize: height,
      active: isActive,
      absolute: toRef(props, "absolute")
    });
    useRender(() => {
      const [toolbarProps] = filterToolbarProps(props);
      return createVNode(VToolbar, mergeProps({
        "ref": vToolbarRef,
        "class": ["v-app-bar", {
          "v-app-bar--bottom": props.location === "bottom"
        }],
        "style": {
          ...layoutItemStyles.value,
          height: void 0
        }
      }, toolbarProps), slots);
    });
    return {};
  }
});

// node_modules/vuetify/lib/components/VAppBar/VAppBarNavIcon.mjs
var VAppBarNavIcon = defineComponent({
  name: "VAppBarNavIcon",
  props: {
    icon: {
      type: IconValue,
      default: "$menu"
    }
  },
  setup(props, _ref) {
    let {
      slots
    } = _ref;
    useRender(() => createVNode(VBtn, {
      "class": "v-app-bar-nav-icon",
      "icon": props.icon
    }, slots));
    return {};
  }
});

// node_modules/vuetify/lib/components/VAppBar/VAppBarTitle.mjs
var VAppBarTitle = defineComponent({
  name: "VAppBarTitle",
  props: {
    ...VToolbarTitle.props
  },
  setup(_, _ref) {
    let {
      slots
    } = _ref;
    useRender(() => createVNode(VToolbarTitle, {
      "class": "v-app-bar-title"
    }, slots));
    return {};
  }
});
export {
  VAppBar,
  VAppBarNavIcon,
  VAppBarTitle
};
//# sourceMappingURL=vuetify_lib_components_VAppBar_index__mjs.js.map
