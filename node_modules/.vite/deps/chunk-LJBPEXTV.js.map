{
  "version": 3,
  "sources": ["../../vuetify/src/composables/forwardRefs.ts"],
  "sourcesContent": ["import type { ComponentPublicInstance, Ref, UnwrapRef } from 'vue'\nimport type { UnionToIntersection } from '@/util'\n\nconst Refs = Symbol('Forwarded refs')\n\n/** Omit properties starting with P */\ntype OmitPrefix<T, P extends string> = Omit<T, keyof T extends `${P}${any}` ? keyof T : never>\n\nexport function forwardRefs<T extends {}, U extends Ref<HTMLElement | Omit<ComponentPublicInstance, '$emit'> | undefined>[]> (\n  target: T,\n  ...refs: U\n): T & OmitPrefix<UnwrapRef<UnionToIntersection<U[number]>>, '$'> {\n  (target as any)[Refs] = refs\n\n  return new Proxy(target, {\n    get (target, key) {\n      if (Reflect.has(target, key)) {\n        return Reflect.get(target, key)\n      }\n      for (const ref of refs) {\n        if (ref.value && Reflect.has(ref.value, key)) {\n          const val = Reflect.get(ref.value, key)\n          return typeof val === 'function'\n            ? val.bind(ref.value)\n            : val\n        }\n      }\n    },\n    getOwnPropertyDescriptor (target, key) {\n      const descriptor = Reflect.getOwnPropertyDescriptor(target, key)\n      if (descriptor) return descriptor\n\n      // Skip internal properties\n      if (typeof key === 'symbol' || key.startsWith('__')) return\n\n      // Check each ref's own properties\n      for (const ref of refs) {\n        if (!ref.value) continue\n        const descriptor = Reflect.getOwnPropertyDescriptor(ref.value, key)\n        if (descriptor) return descriptor\n        if ('_' in ref.value && 'setupState' in ref.value._) {\n          const descriptor = Reflect.getOwnPropertyDescriptor(ref.value._.setupState, key)\n          if (descriptor) return descriptor\n        }\n      }\n      // Recursive search up each ref's prototype\n      for (const ref of refs) {\n        let obj = ref.value && Object.getPrototypeOf(ref.value)\n        while (obj) {\n          const descriptor = Reflect.getOwnPropertyDescriptor(obj, key)\n          if (descriptor) return descriptor\n          obj = Object.getPrototypeOf(obj)\n        }\n      }\n      // Call forwarded refs' proxies\n      for (const ref of refs) {\n        const childRefs = ref.value && (ref.value as any)[Refs]\n        if (!childRefs) continue\n        const queue = childRefs.slice()\n        while (queue.length) {\n          const ref = queue.shift()\n          const descriptor = Reflect.getOwnPropertyDescriptor(ref.value, key)\n          if (descriptor) return descriptor\n          const childRefs = ref.value && (ref.value as any)[Refs]\n          if (childRefs) queue.push(...childRefs)\n        }\n      }\n      return undefined\n    },\n  }) as any\n}\n"],
  "mappings": ";AAGA,IAAMA,OAAOC,OAAO,gBAAD;AAKZ,SAASC,YACdC,QAEgE;AAAA,WAAA,OAAA,UAAA,QAD7DC,OAC6D,IAAA,MAAA,OAAA,IAAA,OAAA,IAAA,CAAA,GAAA,OAAA,GAAA,OAAA,MAAA,QAAA;AAD7DA,SAC6D,OAAA,KAAA,UAAA;EAAA;AAC/DD,SAAeH,QAAQI;AAExB,SAAO,IAAIC,MAAMF,QAAQ;IACvBG,IAAKH,SAAQI,KAAK;AAChB,UAAIC,QAAQC,IAAIN,SAAQI,GAApB,GAA0B;AAC5B,eAAOC,QAAQF,IAAIH,SAAQI,GAApB;MACR;AACD,iBAAWG,OAAON,MAAM;AACtB,YAAIM,IAAIC,SAASH,QAAQC,IAAIC,IAAIC,OAAOJ,GAAvB,GAA6B;AAC5C,gBAAMK,MAAMJ,QAAQF,IAAII,IAAIC,OAAOJ,GAAvB;AACZ,iBAAO,OAAOK,QAAQ,aAClBA,IAAIC,KAAKH,IAAIC,KAAb,IACAC;QACL;MACF;IACF;IACDE,yBAA0BX,SAAQI,KAAK;AACrC,YAAMQ,aAAaP,QAAQM,yBAAyBX,SAAQI,GAAzC;AACnB,UAAIQ;AAAY,eAAOA;AAGvB,UAAI,OAAOR,QAAQ,YAAYA,IAAIS,WAAW,IAAf;AAAsB;AAGrD,iBAAWN,OAAON,MAAM;AACtB,YAAI,CAACM,IAAIC;AAAO;AAChB,cAAMI,cAAaP,QAAQM,yBAAyBJ,IAAIC,OAAOJ,GAA5C;AACnB,YAAIQ;AAAY,iBAAOA;AACvB,YAAI,OAAOL,IAAIC,SAAS,gBAAgBD,IAAIC,MAAMM,GAAG;AACnD,gBAAMF,cAAaP,QAAQM,yBAAyBJ,IAAIC,MAAMM,EAAEC,YAAYX,GAAzD;AACnB,cAAIQ;AAAY,mBAAOA;QACxB;MACF;AAED,iBAAWL,OAAON,MAAM;AACtB,YAAIe,MAAMT,IAAIC,SAASS,OAAOC,eAAeX,IAAIC,KAA1B;AACvB,eAAOQ,KAAK;AACV,gBAAMJ,cAAaP,QAAQM,yBAAyBK,KAAKZ,GAAtC;AACnB,cAAIQ;AAAY,mBAAOA;AACvBI,gBAAMC,OAAOC,eAAeF,GAAtB;QACP;MACF;AAED,iBAAWT,OAAON,MAAM;AACtB,cAAMkB,YAAYZ,IAAIC,SAAUD,IAAIC,MAAcX;AAClD,YAAI,CAACsB;AAAW;AAChB,cAAMC,QAAQD,UAAUE,MAAV;AACd,eAAOD,MAAME,QAAQ;AACnB,gBAAMf,OAAMa,MAAMG,MAAN;AACZ,gBAAMX,cAAaP,QAAQM,yBAAyBJ,KAAIC,OAAOJ,GAA5C;AACnB,cAAIQ;AAAY,mBAAOA;AACvB,gBAAMO,aAAYZ,KAAIC,SAAUD,KAAIC,MAAcX;AAClD,cAAIsB;AAAWC,kBAAMI,KAAK,GAAGL,UAAd;QAChB;MACF;AACD,aAAOM;IACR;EAtDsB,CAAlB;AAwDR;",
  "names": ["Refs", "Symbol", "forwardRefs", "target", "refs", "Proxy", "get", "key", "Reflect", "has", "ref", "value", "val", "bind", "getOwnPropertyDescriptor", "descriptor", "startsWith", "_", "setupState", "obj", "Object", "getPrototypeOf", "childRefs", "queue", "slice", "length", "shift", "push", "undefined"]
}
