{
  "version": 3,
  "sources": ["../../vuetify/src/composables/proxiedModel.ts"],
  "sourcesContent": ["// Utilities\nimport { computed, ref } from 'vue'\nimport { getCurrentInstance, toKebabCase } from '@/util'\n\n// Types\nimport type { Ref } from 'vue'\n\n// Composables\nexport function useProxiedModel<\n  Props extends object & { [key in Prop as `onUpdate:${Prop}`]: ((val: any) => void) | undefined },\n  Prop extends Extract<keyof Props, string>,\n  Inner = Props[Prop],\n> (\n  props: Props,\n  prop: Prop,\n  defaultValue?: Props[Prop],\n  transformIn: (value?: Props[Prop]) => Inner = (v: any) => v,\n  transformOut: (value: Inner) => Props[Prop] = (v: any) => v,\n) {\n  const vm = getCurrentInstance('useProxiedModel')\n\n  const propIsDefined = computed(() => {\n    void props[prop]\n    return !!(\n      (vm?.vnode.props?.hasOwnProperty(prop) || vm?.vnode.props?.hasOwnProperty(toKebabCase(prop)))\n    )\n  })\n\n  const internal = ref(transformIn(props[prop])) as Ref<Inner>\n\n  return computed<Inner extends any[] ? Readonly<Inner> : Inner>({\n    get (): any {\n      if (propIsDefined.value) return transformIn(props[prop])\n      else return internal.value\n    },\n    set (newValue) {\n      if ((propIsDefined.value ? transformIn(props[prop]) : internal.value) === newValue) {\n        return\n      }\n      internal.value = newValue\n      vm?.emit(`update:${prop}`, transformOut(newValue))\n    },\n  })\n}\n"],
  "mappings": ";;;;;;;;;;AAQO,SAASA,gBAKdC,OACAC,MACAC,cAGA;AAAA,MAFAC,cAEA,UAAA,SAAA,KAAA,UAAA,OAAA,SAAA,UAAA,KAF+CC,OAAWA;AAE1D,MADAC,eACA,UAAA,SAAA,KAAA,UAAA,OAAA,SAAA,UAAA,KAD+CD,OAAWA;AAE1D,QAAME,KAAKC,mBAAmB,iBAAD;AAE7B,QAAMC,gBAAgBC,SAAS,MAAM;AAAA,QAAA,iBAAA;AACnC,SAAKT,MAAMC;AACX,WAAO,CAAC,EACLK,MAAE,SAAF,kBAAAA,GAAII,MAAMV,UAAV,QAAA,gBAAiBW,eAAeV,IAAhC,KAAyCK,MAAzC,SAAA,mBAAyCA,GAAII,MAAMV,UAAnD,QAAyC,iBAAiBW,eAAeC,YAAYX,IAAD,CAA3C;EAE7C,CAL6B;AAO9B,QAAMY,WAAWC,IAAIX,YAAYH,MAAMC,KAAP,CAAZ;AAEpB,SAAOQ,SAAwD;IAC7DM,MAAY;AACV,UAAIP,cAAcQ;AAAO,eAAOb,YAAYH,MAAMC,KAAP;;AACtC,eAAOY,SAASG;IACtB;IACDC,IAAKC,UAAU;AACb,WAAKV,cAAcQ,QAAQb,YAAYH,MAAMC,KAAP,IAAgBY,SAASG,WAAWE,UAAU;AAClF;MACD;AACDL,eAASG,QAAQE;AACjBZ,YAAE,OAAF,SAAAA,GAAIa,KAAM,UAASlB,QAAQI,aAAaa,QAAD,CAAvC;IACD;EAX4D,CAAhD;AAahB;",
  "names": ["useProxiedModel", "props", "prop", "defaultValue", "transformIn", "v", "transformOut", "vm", "getCurrentInstance", "propIsDefined", "computed", "vnode", "hasOwnProperty", "toKebabCase", "internal", "ref", "get", "value", "set", "newValue", "emit"]
}
