{
  "version": 3,
  "sources": ["../../vuetify/src/components/VImg/VImg.tsx", "../../vuetify/src/components/VResponsive/VResponsive.tsx"],
  "sourcesContent": ["import './VImg.sass'\n\n// Components\nimport { VResponsive } from '@/components/VResponsive'\n\n// Directives\nimport intersect from '@/directives/intersect'\n\n// Composables\nimport { makeTransitionProps, MaybeTransition } from '@/composables/transition'\n\n// Utilities\nimport {\n  computed,\n  h,\n  nextTick,\n  onBeforeMount,\n  ref,\n  vShow,\n  watch,\n  withDirectives,\n} from 'vue'\nimport {\n  convertToUnit,\n  defineComponent,\n  SUPPORTS_INTERSECTION,\n  useRender,\n} from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\n\n// not intended for public use, this is passed in by vuetify-loader\nexport interface srcObject {\n  src?: string\n  srcset?: string\n  lazySrc?: string\n  aspect: number\n}\n\nexport const VImg = defineComponent({\n  name: 'VImg',\n\n  directives: { intersect },\n\n  props: {\n    aspectRatio: [String, Number],\n    alt: String,\n    cover: Boolean,\n    eager: Boolean,\n    gradient: String,\n    lazySrc: String,\n    options: {\n      type: Object as PropType<IntersectionObserverInit>,\n      // For more information on types, navigate to:\n      // https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API\n      default: () => ({\n        root: undefined,\n        rootMargin: undefined,\n        threshold: undefined,\n      }),\n    },\n    sizes: String,\n    src: {\n      type: [String, Object] as PropType<string | srcObject>,\n      default: '',\n    },\n    srcset: String,\n    width: [String, Number],\n\n    ...makeTransitionProps(),\n  },\n\n  emits: ['loadstart', 'load', 'error'],\n\n  setup (props, { emit, slots }) {\n    const currentSrc = ref('') // Set from srcset\n    const image = ref<HTMLImageElement>()\n    const state = ref<'idle' | 'loading' | 'loaded' | 'error'>(props.eager ? 'loading' : 'idle')\n    const naturalWidth = ref<number>()\n    const naturalHeight = ref<number>()\n\n    const normalisedSrc = computed<srcObject>(() => {\n      return props.src && typeof props.src === 'object'\n        ? {\n          src: props.src.src,\n          srcset: props.srcset || props.src.srcset,\n          lazySrc: props.lazySrc || props.src.lazySrc,\n          aspect: Number(props.aspectRatio || props.src.aspect),\n        } : {\n          src: props.src,\n          srcset: props.srcset,\n          lazySrc: props.lazySrc,\n          aspect: Number(props.aspectRatio || 0),\n        }\n    })\n    const aspectRatio = computed(() => {\n      return normalisedSrc.value.aspect || naturalWidth.value! / naturalHeight.value! || 0\n    })\n\n    watch(() => props.src, () => {\n      init(state.value !== 'idle')\n    })\n    // TODO: getSrc when window width changes\n\n    onBeforeMount(() => init())\n\n    function init (isIntersecting?: boolean) {\n      if (props.eager && isIntersecting) return\n      if (\n        SUPPORTS_INTERSECTION &&\n        !isIntersecting &&\n        !props.eager\n      ) return\n\n      state.value = 'loading'\n\n      if (normalisedSrc.value.lazySrc) {\n        const lazyImg = new Image()\n        lazyImg.src = normalisedSrc.value.lazySrc\n        pollForSize(lazyImg, null)\n      }\n\n      if (!normalisedSrc.value.src) return\n\n      nextTick(() => {\n        emit('loadstart', image.value?.currentSrc || normalisedSrc.value.src)\n\n        if (image.value?.complete) {\n          if (!image.value.naturalWidth) {\n            onError()\n          }\n\n          if (state.value === 'error') return\n\n          if (!aspectRatio.value) pollForSize(image.value, null)\n          onLoad()\n        } else {\n          if (!aspectRatio.value) pollForSize(image.value!)\n          getSrc()\n        }\n      })\n    }\n\n    function onLoad () {\n      getSrc()\n      state.value = 'loaded'\n      emit('load', image.value?.currentSrc || normalisedSrc.value.src)\n    }\n\n    function onError () {\n      state.value = 'error'\n      emit('error', image.value?.currentSrc || normalisedSrc.value.src)\n    }\n\n    function getSrc () {\n      const img = image.value\n      if (img) currentSrc.value = img.currentSrc || img.src\n    }\n\n    function pollForSize (img: HTMLImageElement, timeout: number | null = 100) {\n      const poll = () => {\n        const { naturalHeight: imgHeight, naturalWidth: imgWidth } = img\n\n        if (imgHeight || imgWidth) {\n          naturalWidth.value = imgWidth\n          naturalHeight.value = imgHeight\n        } else if (!img.complete && state.value === 'loading' && timeout != null) {\n          setTimeout(poll, timeout)\n        } else if (img.currentSrc.endsWith('.svg') || img.currentSrc.startsWith('data:image/svg+xml')) {\n          naturalWidth.value = 1\n          naturalHeight.value = 1\n        }\n      }\n\n      poll()\n    }\n\n    const containClasses = computed(() => ({\n      'v-img__img--cover': props.cover,\n      'v-img__img--contain': !props.cover,\n    }))\n\n    const __image = computed(() => {\n      if (!normalisedSrc.value.src || state.value === 'idle') return\n\n      const img = h('img', {\n        class: ['v-img__img', containClasses.value],\n        src: normalisedSrc.value.src,\n        srcset: normalisedSrc.value.srcset,\n        alt: '',\n        sizes: props.sizes,\n        ref: image,\n        onLoad,\n        onError,\n      })\n\n      const sources = slots.sources?.()\n\n      return (\n        <MaybeTransition transition={ props.transition } appear>\n          {\n            withDirectives(\n              sources\n                ? <picture class=\"v-img__picture\">{ sources }{ img }</picture>\n                : img,\n              [[vShow, state.value === 'loaded']]\n            )\n          }\n        </MaybeTransition>\n      )\n    })\n\n    const __preloadImage = computed(() => (\n      <MaybeTransition transition={ props.transition }>\n        { normalisedSrc.value.lazySrc && state.value !== 'loaded' && (\n          <img\n            class={['v-img__img', 'v-img__img--preload', containClasses.value]}\n            src={ normalisedSrc.value.lazySrc }\n            alt=\"\"\n          />\n        )}\n      </MaybeTransition>\n    ))\n\n    const __placeholder = computed(() => {\n      if (!slots.placeholder) return\n\n      return (\n        <MaybeTransition transition={ props.transition } appear>\n          { (state.value === 'loading' || (state.value === 'error' && !slots.error)) &&\n          <div class=\"v-img__placeholder\">{ slots.placeholder() }</div>\n          }\n        </MaybeTransition>\n      )\n    })\n\n    const __error = computed(() => {\n      if (!slots.error) return\n\n      return (\n        <MaybeTransition transition={ props.transition } appear>\n          { state.value === 'error' &&\n            <div class=\"v-img__error\">{ slots.error() }</div>\n          }\n        </MaybeTransition>\n      )\n    })\n\n    const __gradient = computed(() => {\n      if (!props.gradient) return\n\n      return <div class=\"v-img__gradient\" style={{ backgroundImage: `linear-gradient(${props.gradient})` }} />\n    })\n\n    const isBooted = ref(false)\n    {\n      const stop = watch(aspectRatio, val => {\n        if (val) {\n          // Doesn't work with nextTick, idk why\n          requestAnimationFrame(() => {\n            requestAnimationFrame(() => {\n              isBooted.value = true\n            })\n          })\n          stop()\n        }\n      })\n    }\n\n    useRender(() => (\n      <VResponsive\n        class={[\n          'v-img',\n          { 'v-img--booting': !isBooted.value },\n        ]}\n        style={{ width: convertToUnit(props.width === 'auto' ? naturalWidth.value : props.width) }}\n        aspectRatio={ aspectRatio.value }\n        aria-label={ props.alt }\n        role={ props.alt ? 'img' : undefined }\n        v-intersect={[{\n          handler: init,\n          options: props.options,\n        }, null, ['once']]}\n        v-slots={{\n          additional: () => [__image.value, __preloadImage.value, __gradient.value, __placeholder.value, __error.value],\n          default: slots.default,\n        }}\n      />\n    ))\n\n    return {\n      currentSrc,\n      image,\n      state,\n      naturalWidth,\n      naturalHeight,\n    }\n  },\n})\n\nexport type VImg = InstanceType<typeof VImg>\n", "// Styles\nimport './VResponsive.sass'\n\n// Composables\nimport { makeDimensionProps, useDimension } from '@/composables/dimensions'\n\n// Utilities\nimport { computed } from 'vue'\nimport { defineComponent, useRender } from '@/util'\n\nexport function useAspectStyles (props: { aspectRatio?: string | number }) {\n  return {\n    aspectStyles: computed(() => {\n      const ratio = Number(props.aspectRatio)\n\n      return ratio\n        ? { paddingBottom: String(1 / ratio * 100) + '%' }\n        : undefined\n    }),\n  }\n}\n\nexport const VResponsive = defineComponent({\n  name: 'VResponsive',\n\n  props: {\n    aspectRatio: [String, Number],\n    contentClass: String,\n\n    ...makeDimensionProps(),\n  },\n\n  setup (props, { slots }) {\n    const { aspectStyles } = useAspectStyles(props)\n    const { dimensionStyles } = useDimension(props)\n\n    useRender(() => (\n      <div class=\"v-responsive\" style={ dimensionStyles.value }>\n        <div class=\"v-responsive__sizer\" style={ aspectStyles.value } />\n\n        { slots.additional?.() }\n\n        { slots.default && (\n          <div class={['v-responsive__content', props.contentClass]}>{ slots.default() }</div>\n        )}\n      </div>\n    ))\n\n    return {}\n  },\n})\n"],
  "mappings": "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",
  "names": ["useAspectStyles", "props", "aspectStyles", "computed", "ratio", "Number", "aspectRatio", "paddingBottom", "String", "undefined", "VResponsive", "defineComponent", "name", "contentClass", "makeDimensionProps", "setup", "slots", "dimensionStyles", "useDimension", "useRender", "value", "additional", "default", "VImg", "defineComponent", "name", "directives", "intersect", "props", "aspectRatio", "String", "Number", "alt", "cover", "Boolean", "eager", "gradient", "lazySrc", "options", "type", "Object", "default", "root", "undefined", "rootMargin", "threshold", "sizes", "src", "srcset", "width", "makeTransitionProps", "emits", "setup", "emit", "slots", "currentSrc", "ref", "image", "state", "naturalWidth", "naturalHeight", "normalisedSrc", "computed", "aspect", "value", "watch", "init", "onBeforeMount", "isIntersecting", "SUPPORTS_INTERSECTION", "lazyImg", "Image", "pollForSize", "nextTick", "complete", "onError", "onLoad", "getSrc", "img", "timeout", "poll", "imgHeight", "imgWidth", "setTimeout", "endsWith", "startsWith", "containClasses", "__image", "h", "class", "sources", "transition", "withDirectives", "vShow", "__preloadImage", "__placeholder", "placeholder", "error", "__error", "__gradient", "backgroundImage", "isBooted", "stop", "val", "requestAnimationFrame", "useRender", "convertToUnit", "additional", "handler"]
}
