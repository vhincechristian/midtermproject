{
  "version": 3,
  "sources": ["../../vuetify/src/components/VMenu/VMenu.tsx"],
  "sourcesContent": ["// Styles\nimport './VMenu.sass'\n\n// Components\nimport { VDialogTransition } from '@/components/transitions'\nimport { VOverlay } from '@/components/VOverlay'\n\n// Composables\nimport { makeTransitionProps } from '@/composables/transition'\nimport { forwardRefs } from '@/composables/forwardRefs'\nimport { useProxiedModel } from '@/composables/proxiedModel'\nimport { useScopeId } from '@/composables/scopeId'\n\n// Utilities\nimport { computed, inject, provide, ref, watch } from 'vue'\nimport { genericComponent, getUid, useRender } from '@/util'\nimport { VMenuSymbol } from './shared'\n\n// Types\nimport type { OverlaySlots } from '@/components/VOverlay/VOverlay'\n\nexport const VMenu = genericComponent<new () => {\n  $slots: OverlaySlots\n}>()({\n  name: 'VMenu',\n\n  inheritAttrs: false,\n\n  props: {\n    // TODO\n    // disableKeys: Boolean,\n    modelValue: Boolean,\n    id: String,\n\n    ...makeTransitionProps({\n      transition: { component: VDialogTransition },\n    } as const),\n  },\n\n  emits: {\n    'update:modelValue': (value: boolean) => true,\n  },\n\n  setup (props, { attrs, slots }) {\n    const isActive = useProxiedModel(props, 'modelValue')\n    const { scopeId } = useScopeId()\n\n    const uid = getUid()\n    const id = computed(() => props.id || `v-menu-${uid}`)\n\n    const overlay = ref<VOverlay>()\n\n    const parent = inject(VMenuSymbol, null)\n    let openChildren = 0\n    provide(VMenuSymbol, {\n      register () {\n        ++openChildren\n      },\n      unregister () {\n        --openChildren\n      },\n      closeParents () {\n        setTimeout(() => {\n          if (!openChildren) {\n            isActive.value = false\n            parent?.closeParents()\n          }\n        }, 40)\n      },\n    })\n\n    watch(isActive, val => {\n      val ? parent?.register() : parent?.unregister()\n    })\n\n    function onClickOutside () {\n      parent?.closeParents()\n    }\n\n    useRender(() => (\n      <VOverlay\n        ref={ overlay }\n        v-model={ isActive.value }\n        class={[\n          'v-menu',\n        ]}\n        transition={ props.transition }\n        absolute\n        closeOnContentClick\n        locationStrategy=\"connected\"\n        scrollStrategy=\"reposition\"\n        scrim={ false }\n        openDelay=\"300\"\n        closeDelay=\"250\"\n        activatorProps={{\n          'aria-haspopup': 'menu',\n          'aria-expanded': String(isActive.value),\n          'aria-owns': id.value,\n        }}\n        onClick:outside={ onClickOutside }\n        { ...scopeId }\n        { ...attrs }\n        v-slots={{\n          default: slots.default,\n          activator: slots.activator,\n        }}\n      />\n    ))\n\n    return forwardRefs({ id }, overlay)\n  },\n})\n\nexport type VMenu = InstanceType<typeof VMenu>\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,OAAA;AAoBO,IAAMA,QAAQC,iBAAgB,EAEhC;EACHC,MAAM;EAENC,cAAc;EAEdC,OAAO;IAGLC,YAAYC;IACZC,IAAIC;IAEJ,GAAGC,oBAAoB;MACrBC,YAAY;QAAEC,WAAWC;MAAb;IADS,CAAD;EANjB;EAWPC,OAAO;IACL,qBAAsBC,WAAmB;EADpC;EAIPC,MAAOX,OAAF,MAA2B;AAAA,QAAlB;MAAEY;MAAOC;IAAT,IAAkB;AAC9B,UAAMC,WAAWC,gBAAgBf,OAAO,YAAR;AAChC,UAAM;MAAEgB;IAAF,IAAcC,WAAU;AAE9B,UAAMC,MAAMC,OAAM;AAClB,UAAMhB,KAAKiB,SAAS,MAAMpB,MAAMG,MAAO,UAASe,KAA7B;AAEnB,UAAMG,UAAUC,IAAG;AAEnB,UAAMC,SAASC,OAAOC,aAAa,IAAd;AACrB,QAAIC,eAAe;AACnBC,YAAQF,aAAa;MACnBG,WAAY;AACV,UAAEF;MACH;MACDG,aAAc;AACZ,UAAEH;MACH;MACDI,eAAgB;AACdC,mBAAW,MAAM;AACf,cAAI,CAACL,cAAc;AACjBZ,qBAASJ,QAAQ;AACjBa,sBAAM,OAAN,SAAAA,OAAQO,aAAR;UACD;QACF,GAAE,EALO;MAMX;IAdkB,CAAd;AAiBPE,UAAMlB,UAAUmB,SAAO;AACrBA,YAAMV,UAAH,OAAA,SAAGA,OAAQK,SAAR,IAAqBL,UAAxB,OAAA,SAAwBA,OAAQM,WAAR;IAC5B,CAFI;AAIL,aAASK,iBAAkB;AACzBX,gBAAM,OAAN,SAAAA,OAAQO,aAAR;IACD;AAEDK,cAAU,MAAA,YAAA,UAAA,WAAA;MAAA,OAEAd;MAFA,cAGIP,SAASJ;MAHb,uBAAA,YAGII,SAASJ,QAHb;MAAA,SAIC,CACL,QADK;MAJD,cAOOV,MAAMM;MAPb,YAAA;MAAA,uBAAA;MAAA,oBAUW;MAVX,kBAWS;MAXT,SAYE;MAZF,aAaI;MAbJ,cAcK;MAdL,kBAeU;QACd,iBAAiB;QACjB,iBAAiBF,OAAOU,SAASJ,KAAV;QACvB,aAAaP,GAAGO;MAHF;MAfV,mBAoBYwB;IApBZ,GAqBDlB,SACAJ,KAtBC,GAuBG;MACPwB,SAASvB,MAAMuB;MACfC,WAAWxB,MAAMwB;IAFV,CAvBH,CAAD;AA8BT,WAAOC,YAAY;MAAEnC;IAAF,GAAQkB,OAAT;EACnB;AAvFE,CAFgC;",
  "names": ["VMenu", "genericComponent", "name", "inheritAttrs", "props", "modelValue", "Boolean", "id", "String", "makeTransitionProps", "transition", "component", "VDialogTransition", "emits", "value", "setup", "attrs", "slots", "isActive", "useProxiedModel", "scopeId", "useScopeId", "uid", "getUid", "computed", "overlay", "ref", "parent", "inject", "VMenuSymbol", "openChildren", "provide", "register", "unregister", "closeParents", "setTimeout", "watch", "val", "onClickOutside", "useRender", "default", "activator", "forwardRefs"]
}
